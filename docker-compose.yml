services:
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    # env_file:
    #   - ./backend/.env
    environment:
      - POSTGRES_PASSWORD=320330
      - POSTGRES_USER=postgres
      - POSTGRES_DB=MySiteDb
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=MySiteDb
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=320330
    volumes:
      - ./backend:/code
      - static_volume:/code/static
    # env_file:
    #   - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
    # ports:
    #   - "80:80"
    env_file:
      - .env
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/code/static
    depends_on:
      - frontend
      - backend
    networks:
      - app-network


volumes:
  postgres_data:
  frontend_build:
  static_volume:

networks:
  app-network:
    driver: bridge